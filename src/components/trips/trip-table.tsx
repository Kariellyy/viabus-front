import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Trip } from "@/types/trip";
import { formatDate } from "@/lib/utils";
import { Badge } from "@/components/ui/badge";
import { Calendar, AlertCircle } from "lucide-react";
import {
  Tooltip,
  TooltipContent,
  TooltipTrigger,
  TooltipProvider,
} from "@/components/ui/tooltip";
import { Button } from "@/components/ui/button";

interface TripTableProps {
  trips: Trip[];
  showAutoGenerated?: boolean;
  onAssignDriver?: (tripId: string, driverId: string) => void;
  onAssignVehicle?: (tripId: string, vehicleId: string) => void;
}

const statusMap = {
  scheduled: { label: "Agendada", variant: "secondary" },
  in_progress: { label: "Em Andamento", variant: "default" },
  completed: { label: "Agendada", variant: "outline" },
  cancelled: { label: "Cancelada", variant: "destructive" },
} as const;

export function TripTable({
  trips,
  showAutoGenerated,
  onAssignDriver,
  onAssignVehicle,
}: TripTableProps) {
  return (
    <TooltipProvider>
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>Rota</TableHead>
            <TableHead>Motorista</TableHead>
            <TableHead>Veículo</TableHead>
            <TableHead>Horário Saída</TableHead>
            <TableHead>Status</TableHead>
            <TableHead>Ações</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {trips.map((trip) => (
            <TableRow key={trip.id}>
              <TableCell>
                <div className="flex items-center gap-2">
                  {trip.isAutoGenerated && (
                    <Tooltip>
                      <TooltipTrigger>
                        <Calendar className="h-4 w-4 text-muted-foreground" />
                      </TooltipTrigger>
                      <TooltipContent>
                        Viagem gerada automaticamente
                      </TooltipContent>
                    </Tooltip>
                  )}
                  {trip.route}
                </div>
              </TableCell>
              <TableCell>
                {trip.driver || (
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => {
                      /* Abrir modal de seleção de motorista */
                    }}
                  >
                    Atribuir Motorista
                  </Button>
                )}
              </TableCell>
              <TableCell>{trip.vehicle}</TableCell>
              <TableCell>{formatDate(trip.departureTime)}</TableCell>
              <TableCell>
                <Badge variant={statusMap[trip.status].variant}>
                  {statusMap[trip.status].label}
                </Badge>
              </TableCell>
              <TableCell>{/* Ações serão implementadas depois */}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TooltipProvider>
  );
}
